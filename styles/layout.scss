body,
body * {
  margin: auto;
  padding: 0;
}

body {
  min-height: 100vh;
  z-index: 1;

  dialog {
    position: fixed;
    padding: 50px 30px 30px;
    top: 200px;
    max-width: 450px;
    max-height: 50vh;
    z-index: 100;

    &#characterAdd,
    &#characterEdit {
      max-width: 550px;
    }

    &#batchAdd {
      max-width: 600px;
    }

    h1,
    h2,
    h3,
    h4,
    h5 {
      margin-bottom: 22px;
    }

    .error {
      text-align: center;
    }

    div:has(input, button) {
      display: grid;
      grid-gap: 6px;

      &.split1 {
        grid-template-columns: auto 1fr;
      }

      &.split3 {
        grid-template-columns: auto 1fr auto 1fr auto 1fr;
      }

      &.characterInput {
        grid-template-columns: auto 1fr auto 1fr auto 3.5em;
      }

      $inputWidth: 80px;
      &.playtime {
        grid-template-areas: ". label days hours minutes .";
        grid-template-columns: 1fr auto $inputWidth $inputWidth $inputWidth 1fr;

        label {
          grid-area: label;
        }
        input[name="days"] {
          grid-area: days;
        }
        input[name="hours"] {
          grid-area: hours;
        }
        input[name="minutes"] {
          grid-area: minutes;
        }
        & ~ p {
          text-align: center;
        }
      }

      &.compactCharacterInput {
        grid-template-columns: 2fr 2fr 1fr $inputWidth $inputWidth $inputWidth;
        grid-gap: 8px;
        margin: 8px;
      }

      &.submit {
        grid-template-areas: ". submit";
        grid-template-columns: 1fr auto;
        margin-bottom: 0;

        &:has([name="delete"]) {
          grid-template-areas: ". delete submit";
          grid-template-columns: 1fr auto auto;
        }

        button {
          height: 24px;
          width: 70px;

          &[name="submit"] {
            grid-area: submit;
          }
          &[name="delete"] {
            grid-area: delete;
          }
        }
      }

      input {
        width: 100%;
      }

      input ~ label {
        margin-left: 6px;
      }
    }

    div.playtime ~ p {
      margin-top: -12px;
    }

    div.bottom {
      display: grid;
      grid-template-areas: "more submit";
      grid-template-columns: 1fr 1fr;
      margin-bottom: 0;

      details {
        grid-area: more;
        width: 100%;
        height: 3.5em;
      }

      .submit {
        grid-area: submit;
      }
    }

    div,
    p {
      margin: 16px 0;
    }

    textarea {
      width: 100%;

      &[name="notes"],
      &[name="import"] {
        resize: vertical;
      }
    }

    details {
      summary {
        margin-bottom: 6px;
      }

      p {
        margin: 0;
      }
    }
  }

  header {
    text-align: center;
    padding: 30px 0;
    max-width: 700px;
  }

  main {
    padding-bottom: 100px;
    display: grid;
    grid-template-areas: ". nav ." ". loading ." ". table .";
    grid-template-columns: 1fr auto 1fr;

    nav {
      text-align: center;
      grid-area: nav;
      margin: 6px auto;
      display: flex;
      gap: 20px;

      > * {
        display: inline-block;
      }
    }

    #loading {
      grid-area: loading;

      img {
        height: 60px;
      }
    }

    #mainTable {
      grid-area: table;
      max-width: calc(100vw - 500px);

      #tabs {
        display: flex;
        transform: translate(14px, 1px);

        > * {
          margin: 0 2px;
          padding: 6px 10px 6px 16px;
          display: flex;
          grid-gap: 12px;

          &#addTab {
            padding: 6px 8px;
          }
        }

        .close-tab {
          transform: translateY(-1px);
        }
      }

      .editPopup {
        position: absolute;
        transform: translate(-100%, 14px);
        padding: 8px;
        opacity: 0;
        pointer-events: none;

        &.active {
          opacity: 1;
          pointer-events: auto;
        }

        p {
          cursor: pointer;
        }
      }

      table {
        thead {
          position: sticky;
          top: 0;
          z-index: 2;
        }

        img[alt="icon"] {
          height: 2.5em;
          margin-bottom: -4px;
        }

        th {
          padding: 8px 8px;
        }

        td {
          padding: 0 8px;
          overflow: hidden;
          text-overflow: ellipsis;
          max-height: 2.5em;

          &:has(img[alt="dots"]) {
            -webkit-user-select: none;
            user-select: none;
            cursor: pointer;
            transition: 0.4s;

            &:hover {
              filter: brightness(2);
            }
          }

          &:has(img[alt="icon"]) {
            padding: 0;
          }

          &[data-filter-id="links"] img {
            max-width: 1.1em;
          }
        }
      }
    }

    table:not(:has(th, td)) ~ .addCharacterButton {
      display: none;
    }

    .addCharacterButton {
      text-align: center;
      margin-top: 10px;
    }
  }
}
